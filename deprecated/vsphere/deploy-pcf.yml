# To set your Concourse pipeline:
# WARNING: This file is used to create public pipelines. Set "make_public: false"
# fly -t <your-concourse> set-pipeline \
#  --config deploy-pcf.yml \
#  --pipeline deploy-pcf \
#  --var "opsmgr-version=1.6" \
#  --var "ert-version=1.6" \
#  --var "environment-name=<your-env-name>" \
#  --var "pivnet-token=<your-pivnet-token>" \
#  --var "github-key=$(cat <path-to-github-key>)"
---
opsmgr_version: &opsmgr_version {{opsmgr-version}}
opsmgr_version_filter: &opsmgr_version_filter {{opsmgr-version-filter}}
ert_version: &ert_version {{ert-version}}
ert_version_filter: &ert_version_filter {{ert-version-filter}}
environment_name: &env_name {{environment-name}}
env_app_url: &env_app_url environments.toolsmiths.cf-app.com
pivnet_token: &pivnet_token {{pivnet-token}}
worker_tag: &worker_tag [{{worker-tag}}]
github_key: &github_key {{github-key}}
make_public: &make_public true

default_opsman_username: &default_opsman_username {{default_opsman_username}}
default_opsman_password: &default_opsman_password {{default_opsman_password}}

#The following parameters are used to generate and email success and failure messages.
pipeline_url: &pipeline_url {{pipeline-url}}
ops_manager_url: &ops_manager_url {{ops-manager-url}}
contact_email: &contact_email {{contact-email}}
smtp_server: &smtp_server {{smtp-server}}
smtp_port: &smtp_port "25" # this must be a string
smtp_username: &smtp_username {{smtp-username}}
smtp_password: &smtp_password {{smtp-password}}
from_email: &from_email {{from-email}}

email_user_on_failure: &email-on-failure
  do:
  - task: generate email-file
    config:
      platform: linux
      image: docker:///blang/alpine-bash
      params:
        ENV_NAME: *env_name
        PIPELINE_URL: *pipeline_url
        CONTACT_EMAIL: *contact_email
      run:
        path: /bin/bash
        args:
        - '-c'
        - 'echo -e "Failed to deploy PCF on $ENV_NAME" > $PWD/pipeline-output/subject-file && echo -e "Hello $CONTACT_EMAIL,\n\nYour PCF deployment on $ENV_NAME failed. We will take a look at it as soon as possible. In the meantime, you can take a look at the pipeline to get an idea why it failed: $PIPELINE_URL.\n\nThanks,\n\nCF Toolsmiths Team" > $PWD/pipeline-output/body-file'
      outputs:
      - name: pipeline-output
  - put: send-an-email
    params: 
      subject: pipeline-output/subject-file
      body: pipeline-output/body-file

groups:
- name: deploy-pcf-vsphere
  jobs:
  - upload-om-pcf-vsphere
  - configure-ops-manager
  - upload-elastic-runtime-pcf-vsphere
  - configure-elastic-runtime
  - trigger-install

resources:
  - name: toolsmiths-shared-scripts
    type: git
    source:
      uri: https://github.com/pivotal-cf/toolsmiths-shared-scripts
  - name: p-runtime
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-runtime.git
      private_key: *github_key
      branch: rel/1.9
  - name: send-an-email
    type: email
    source:
      smtp:
        host: *smtp_server
        port: *smtp_port
        username: *smtp_username
        password: *smtp_password
      from: *from_email
      to: [ *contact_email, 'cf-toolsmiths@pivotal.io' ]
  - name: pivnet-opsmgr
    type: pivnet
    source:
      api_token: *pivnet_token
      product_slug: ops-manager
      product_version: *opsmgr_version_filter
      sort_by: semver
  - name: pivnet-ert
    type: pivnet
    source:
      api_token: *pivnet_token
      product_slug: elastic-runtime
      product_version: *ert_version_filter
      sort_by: semver

resource_types:
  - name: email
    type: docker-image
    source:
      repository: pcfseceng/email-resource

  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final

jobs:
  - name: upload-om-pcf-vsphere
    public: *make_public
    serial: true
    plan:
    - aggregate:
      - get: toolsmiths-shared-scripts
        tags: *worker_tag
      - get: p-runtime
        tags: *worker_tag
      - get: pivnet-opsmgr
        tags: *worker_tag
        attempts: 3
        params:
          globs:
          - '*vsphere*'
    - do:
      - task: get-env-config
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          outputs:
          - name: environment
          run:
            path: /bin/bash
            args: ['-c', 'echo "Downloading manifest for resource_pool: ${ENV_NAME} from environment app: http://${ENV_APP_URL}" && wget http://${ENV_APP_URL}/engineering_environments/${ENV_NAME}/generate_with_name -O ${ENV_NAME}.yml']
            dir: environment
        params:
          ENV_NAME: *env_name
          ENV_APP_URL: *env_app_url
      - task: deploy-ops-manager
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          inputs:
          - name: toolsmiths-shared-scripts
          - name: pivnet-opsmgr
          - name: environment
          - name: p-runtime
          run:
            path: /bin/bash
            args: ['-c', 'bundle install && ./deploy_pcf.rb -D ../../environment -N ${ENV_NAME} -O $(ls ../../pivnet-opsmgr/*.ova) -H -C opsmgr:destroy,opsmgr:install']
            dir: toolsmiths-shared-scripts/deploy_pcf
        params:
          ENV_NAME: *env_name
          OPSMGR_VERSION: *opsmgr_version
      on_failure: *email-on-failure

  - name: configure-ops-manager
    serial: true
    plan:
    - aggregate:
      - get: toolsmiths-shared-scripts
        tags: *worker_tag
      - get: p-runtime
        tags: *worker_tag
        passed: [upload-om-pcf-vsphere]
        trigger: true
    - do:
      - task: get-env-config
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          outputs:
          - name: environment
          run:
            path: /bin/bash
            args: ['-c', 'echo "Downloading manifest for resource_pool: ${ENV_NAME} from environment app: http://${ENV_APP_URL}" && wget http://${ENV_APP_URL}/engineering_environments/${ENV_NAME}/generate_with_name -O ${ENV_NAME}.yml']
            dir: environment
        params:
          ENV_NAME: *env_name
          ENV_APP_URL: *env_app_url
      - task: configure-ops-manager
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          inputs:
          - name: p-runtime
          - name: toolsmiths-shared-scripts
          - name: environment
          run:
            path: /bin/bash
            args: ['-c', 'bundle && ./deploy_pcf.rb -D ../../environment -N ${ENV_NAME} -H -C opsmgr:add_first_user,opsmgr:microbosh:configure']
            dir: toolsmiths-shared-scripts/deploy_pcf
        params:
          ENV_NAME: *env_name
          OPSMGR_VERSION: *opsmgr_version
          PIVNET_TOKEN: *pivnet_token
      - task: patch-network-config
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          inputs:
          - name: toolsmiths-shared-scripts
          run:
            path: /bin/bash
            args: ['-c', 'chmod +x patch_opsman_network_config.sh && ./patch_opsman_network_config.sh']
            dir: toolsmiths-shared-scripts/deploy_pcf
        params:
          ENV_NAME: *env_name
          OPSMAN_USERNAME: *default_opsman_username
          OPSMAN_PASSWORD: *default_opsman_password
      on_failure: *email-on-failure
  - name: upload-elastic-runtime-pcf-vsphere
    serial: true
    plan:
    - aggregate:
      - get: toolsmiths-shared-scripts
        tags: *worker_tag
      - get: p-runtime
        tags: *worker_tag
        passed: [configure-ops-manager]
        trigger: true
      - get: pivnet-ert
        tags: *worker_tag
        attempts: 3
        params:
          globs: ["*pivotal"]
    - do:
      - task: get-env-config
        tags: *worker_tag
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          outputs:
          - name: environment
          run:
            path: /bin/bash
            args: ['-c', 'echo "Downloading manifest for resource_pool: ${ENV_NAME} from environment app: http://${ENV_APP_URL}" && wget http://${ENV_APP_URL}/engineering_environments/${ENV_NAME}/generate_with_name -O ${ENV_NAME}.yml']
            dir: environment
        params:
          ENV_NAME: *env_name
          ENV_APP_URL: *env_app_url
      - task: upload-elastic-runtime
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          inputs:
          - name: toolsmiths-shared-scripts
          - name: pivnet-ert
          - name: environment
          - name: p-runtime
          run:
            path: /bin/bash
            args: ['-c', 'bundle install && ./deploy_pcf.rb -D ../../environment -N ${ENV_NAME} -E $(ls ../../pivnet-ert/*.pivotal) -H -C opsmgr:product:upload_add,opsmgr:product:import_stemcell']
            dir: toolsmiths-shared-scripts/deploy_pcf
        params:
          ENV_NAME: *env_name
          OPSMGR_VERSION: *opsmgr_version
          PIVNET_TOKEN: *pivnet_token
      on_failure: *email-on-failure
  - name: configure-elastic-runtime
    serial: true
    plan:
    - aggregate:
      - get: toolsmiths-shared-scripts
        tags: *worker_tag
      - get: p-runtime
        tags: *worker_tag
        passed: [upload-elastic-runtime-pcf-vsphere]
        trigger: true
    - do:
      - task: get-env-config
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          outputs:
          - name: environment
          run:
            path: /bin/bash
            args: ['-c', 'echo "Downloading manifest for resource_pool: ${ENV_NAME} from environment app: http://${ENV_APP_URL}" && wget http://${ENV_APP_URL}/engineering_environments/${ENV_NAME}/generate_with_name -O ${ENV_NAME}.yml']
            dir: environment
        params:
          ENV_NAME: *env_name
          ENV_APP_URL: *env_app_url
      - task: configure-elastic-runtime
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          inputs:
          - name: toolsmiths-shared-scripts
          - name: environment
          - name: p-runtime
          run:
            path: /bin/bash
            args: ['-c', 'bundle install && ./deploy_pcf.rb -D ../../environment -N ${ENV_NAME} -H -C ert:configure']
            dir: toolsmiths-shared-scripts/deploy_pcf
        params:
          ENV_NAME: *env_name
          OPSMGR_VERSION: *opsmgr_version
          ERT_VERSION: *ert_version
          PIVNET_TOKEN: *pivnet_token
      on_failure: *email-on-failure
  - name: trigger-install
    serial: true
    plan:
    - aggregate:
      - get: toolsmiths-shared-scripts
        tags: *worker_tag
      - get: p-runtime
        tags: *worker_tag
        passed: [configure-elastic-runtime]
        trigger: true
    - do:
      - task: get-env-config
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          outputs:
          - name: environment
          run:
            path: /bin/bash
            args: ['-c', 'echo "Downloading manifest for resource_pool: ${ENV_NAME} from environment app: http://${ENV_APP_URL}" && wget http://${ENV_APP_URL}/engineering_environments/${ENV_NAME}/generate_with_name -O ${ENV_NAME}.yml']
            dir: environment
        params:
          ENV_NAME: *env_name
          ENV_APP_URL: *env_app_url
      - task: trigger-install
        tags: *worker_tag
        privileged: true
        config:
          platform: linux
          image: docker:///cftoolsmiths/deploy-pcf-vsphere
          inputs:
          - name: toolsmiths-shared-scripts
          - name: environment
          - name: p-runtime
          run:
            path: /bin/bash
            args: ['-c', 'bundle install && ./deploy_pcf.rb -D ../../environment -N ${ENV_NAME} -H -C opsmgr:trigger_install']
            dir: toolsmiths-shared-scripts/deploy_pcf
        params:
          ENV_NAME: *env_name
          OPSMAN_USERNAME: *default_opsman_username
          OPSMAN_PASSWORD: *default_opsman_password
          OPSMGR_VERSION: *opsmgr_version
          PIVNET_TOKEN: *pivnet_token
      - task: email-on-success
        config:
          platform: linux
          image: docker:///blang/alpine-bash
          params:
            ENV_NAME: *env_name
            OPS_MANAGER_URL: *ops_manager_url
            CONTACT_EMAIL: *contact_email
          run:
            path: /bin/bash  
            args:
            - '-c'
            - 'echo -e "Successfully deployed PCF on $ENV_NAME" > $PWD/pipeline-output/subject-file && echo -e "Hello $CONTACT_EMAIL,\n\nYour PCF deployment on $ENV_NAME succeeded. You can access your Ops Manager here: $OPS_MANAGER_URL.\n\nThanks,\n\nCF Toolsmiths Team" > $PWD/pipeline-output/body-file'
          outputs:
          - name: pipeline-output
      - put: send-an-email
        params: 
          subject: pipeline-output/subject-file
          body: pipeline-output/body-file
      on_failure: *email-on-failure
